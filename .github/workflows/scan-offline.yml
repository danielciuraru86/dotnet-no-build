name: Download and Populate Trivy Databases

on:
  push:
    branches:
      - trivy-offline  # Trigger for the feature branch

jobs:
  DownloadAndCacheDB:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full history for potential references

      # Step 2: Create Cache Directory
      - name: Create Cache Directory
        run: mkdir -p /tmp/.cache/trivy  # Create a local directory for caching

      # Step 3: Cache Trivy DB
      - name: Restore Trivy DB Cache
        id: cache_trivy
        uses: actions/cache@v3
        with:
          path: /tmp/.cache/trivy  # Cache path
          key: trivy-db-${{ runner.os }}-${{ github.ref }}  # Use branch ref for key
          restore-keys: |
            trivy-db-${{ runner.os }}-
            trivy-db-

      # Step 4: Download Trivy databases if not cached
      - name: Download Trivy Databases
        uses: docker://aquasec/aqua-scanner
        with:
          args: |
            image --cache-dir /tmp/.cache/trivy \
            --download-db-only \
            --no-progress \
            --db-repository ghcr.io/aquasecurity/trivy-db:2 \
            --java-db-repository ghcr.io/aquasecurity/trivy-java-db:1 \
            --checks-bundle-repository ghcr.io/aquasecurity/trivy-checks:0
        if: steps.cache_trivy.outputs.cache-hit != 'true'  # Only download if cache miss

      # Step 5: Check contents of the cache directory after the download
      - name: Verify Cache Directory
        run: |
          echo "Contents of /tmp/.cache/trivy:"
          ls -la /tmp/.cache/trivy
          if [ -d /tmp/.cache/trivy/db ]; then
            echo "Databases downloaded successfully."
            ls -la /tmp/.cache/trivy/db
          else
            echo "Databases not found!"
            exit 1
          fi
