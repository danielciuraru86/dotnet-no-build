jobs:
  Scan:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup .NET SDK
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0'

      # Restore .NET dependencies
      - name: Restore dependencies
        run: dotnet restore ./src/MySampleDotNetApp/MySampleDotNetApp.csproj

      # Cache Trivy database
      - name: Cache Trivy database
        uses: actions/cache@v3
        with:
          path: /tmp/.cache/trivy
          key: trivy-db-${{ runner.os }}  # Simple cache key without lock file
          restore-keys: |
            trivy-db-${{ runner.os }}-
            trivy-db-
        env:
          DOTNET_ROOT: /usr/share/dotnet

      # Step to run Trivy database update if cache miss
      - name: Download Trivy databases
        id: download-db
        uses: docker://aquasec/aqua-scanner
        with:
          args: trivy fs --download-db-only
        env:
          AQUA_KEY: ${{ secrets.AQUA_KEY }}
          AQUA_SECRET: ${{ secrets.AQUA_SECRET }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AQUA_URL: ${{ vars.AQUA_URL }}
          CSPM_URL: ${{ vars.CSPM_URL }}
          TRIVY_RUN_AS_PLUGIN: "aqua"
        if: steps.cache.outputs.cache-hit != 'true'  # Only run if cache was missed

      # Run Trivy scan
      - name: Run Trivy scan (Offline)
        uses: docker://aquasec/aqua-scanner
        with:
          args: |
            trivy fs --offline-scan --skip-db-update --skip-java-db-update --skip-check-update --sast --reachability --scanners misconfig,vuln,secret --cache-dir /tmp/.cache/trivy /github/workspace
        env:
          AQUA_KEY: ${{ secrets.AQUA_KEY }}
          AQUA_SECRET: ${{ secrets.AQUA_SECRET }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AQUA_URL: ${{ vars.AQUA_URL }}
          CSPM_URL: ${{ vars.CSPM_URL }}
          TRIVY_RUN_AS_PLUGIN: "aqua"
